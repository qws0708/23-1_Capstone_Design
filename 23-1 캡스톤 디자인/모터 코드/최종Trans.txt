// M2
int IN1 = 2;
int IN2 = 3;
int IN3 = 4;
int IN4 = 5;

// M1
int IN5 = 8;
int IN6 = 9;
int IN7 = 10;
int IN8 = 11;


void setup() {

  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(IN5, OUTPUT);
  pinMode(IN6, OUTPUT);
  pinMode(IN7, OUTPUT);
  pinMode(IN8, OUTPUT);

  Serial.begin(9600);
}


void M1_Forward_Turn1() {  // X축 시계방향 1.8도 한바퀴
  digitalWrite(IN5, LOW);
  digitalWrite(IN6, HIGH);
  digitalWrite(IN7, HIGH);
  digitalWrite(IN8, LOW);
  delay(3);
}

void M1_Forward_Turn2() {  // X축 시계방향 1.8도 한바퀴
  digitalWrite(IN5, LOW);
  digitalWrite(IN6, HIGH);
  digitalWrite(IN7, LOW);
  digitalWrite(IN8, HIGH);
  delay(3);
}

void M1_Forward_Turn3() {  // X축 시계방향 1.8도 한바퀴
  digitalWrite(IN5, HIGH);
  digitalWrite(IN6, LOW);
  digitalWrite(IN7, LOW);
  digitalWrite(IN8, HIGH);
  delay(3);
}

void M1_Forward_Turn4() {  // X축 시계방향 1.8도 한바퀴
  digitalWrite(IN5, HIGH);
  digitalWrite(IN6, LOW);
  digitalWrite(IN7, HIGH);
  digitalWrite(IN8, LOW);
  delay(3);
}

void M1_Backward_Turn1() {  // X축 반시계방향 1.8도 한바퀴
  digitalWrite(IN5, HIGH);
  digitalWrite(IN6, LOW);
  digitalWrite(IN7, HIGH);
  digitalWrite(IN8, LOW);
  delay(3);
}

void M1_Backward_Turn2() {  // X축 반시계방향 1.8도 한바퀴
  digitalWrite(IN5, HIGH);
  digitalWrite(IN6, LOW);
  digitalWrite(IN7, LOW);
  digitalWrite(IN8, HIGH);
  delay(3);
}

void M1_Backward_Turn3() {  // X축 반시계방향 1.8도 한바퀴
  digitalWrite(IN5, LOW);
  digitalWrite(IN6, HIGH);
  digitalWrite(IN7, LOW);
  digitalWrite(IN8, HIGH);
  delay(3);
}

void M1_Backward_Turn4() {  // X축 반시계방향 1.8도 한바퀴
  digitalWrite(IN5, LOW);
  digitalWrite(IN6, HIGH);
  digitalWrite(IN7, HIGH);
  digitalWrite(IN8, LOW);
  delay(3);
}


void M2_Forward_Turn1() {  // Y축 시계방향 1.8도 한바퀴
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  delay(3);
}

void M2_Forward_Turn2() {  // Y축 시계방향 1.8도 한바퀴
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  delay(3);
}

void M2_Forward_Turn3() {  // Y축 시계방향 1.8도 한바퀴
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  delay(3);
}

void M2_Forward_Turn4() {  // Y축 시계방향 1.8도 한바퀴
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  delay(3);
}

void M2_Backward_Turn1() {  // Y축 반시계방향 1.8도 한바퀴
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  delay(3);
}

void M2_Backward_Turn2() {  // Y축 반시계방향 1.8도 한바퀴
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  delay(3);
}

void M2_Backward_Turn3() {  // Y축 반시계방향 1.8도 한바퀴
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
  delay(3);
}

void M2_Backward_Turn4() {  // Y축 반시계방향 1.8도 한바퀴
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  delay(3);
}


void loop() {
  Serial.print("Enter 0 or 1 = ");

  while (Serial.available() == 0) {}  // Wait until data is available
  int X = Serial.parseInt();          // Read the input as an integer
  Serial.println(X);                  // Print the value of x

  // Clear the input buffer
  while (Serial.available() > 0) {
    char _ = Serial.read();
  }

  if (X == 0) {

    delay(2000);

    for (int i = 0; i < 200; i++) {
      M1_Forward_Turn1();
      M1_Forward_Turn2();
      M1_Forward_Turn3();
      M1_Forward_Turn4();
    }

    delay(2000);

    for (int i = 0; i < 200; i++) { 
      M2_Forward_Turn1();
      M2_Forward_Turn2();
      M2_Forward_Turn3();
      M2_Forward_Turn4();
    }
  
    delay(2000);

    Serial.println("A");
  }

}